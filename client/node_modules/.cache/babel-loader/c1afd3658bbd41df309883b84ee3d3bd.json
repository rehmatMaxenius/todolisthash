{"ast":null,"code":"import _objectSpread from\"D:/mernStack/TodoList/server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/mernStack/TodoList/server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Stack from'react-bootstrap/Stack';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import{todoDataUpdateId,createTodo,updateTodo}from'../../store/actions/TodoActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TodoForm=function TodoForm(){var dispatch=useDispatch();var _useState=useState({list_id:null,title:'',date:'',status:false}),_useState2=_slicedToArray(_useState,2),todo=_useState2[0],setTodo=_useState2[1];var currentUpdateTodoId=useSelector(function(state){return state.TodoUpdateId;});//update data of todos    \nvar currentTodoDataUpdateId=useSelector(function(state){return state.TodoDataUpdateId;});var todoDataUpdate=useSelector(function(state){return currentTodoDataUpdateId!==null?state.todos.find(function(todo){return todo._id===currentTodoDataUpdateId;}):null;});//set local todo update data \nuseEffect(function(){if(todoDataUpdate)setTodo(todoDataUpdate);},[todoDataUpdate]);useEffect(function(){setTodo(_objectSpread(_objectSpread({},todo),{},{list_id:currentUpdateTodoId}));},[currentUpdateTodoId]);var handleSubmit=function handleSubmit(e){e.preventDefault();if(todo.title&&todo.date){if(currentTodoDataUpdateId!==null){dispatch(updateTodo(currentTodoDataUpdateId,todo));}else{dispatch(createTodo(todo));}clear();}};var clear=function clear(){dispatch(todoDataUpdateId(null));setTodo({list_id:null,title:'',date:'',status:false});};return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"ms-4\",children:currentUpdateTodoId&&/*#__PURE__*/_jsx(Form,{method:\"post\",onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(Stack,{direction:\"horizontal\",gap:3,children:[/*#__PURE__*/_jsx(Form.Control,{className:\"me-auto\",value:todo.title,onChange:function onChange(e){return setTodo(_objectSpread(_objectSpread({},todo),{},{title:e.target.value}));},placeholder:\"Enter Title\"}),!currentTodoDataUpdateId&&/*#__PURE__*/_jsx(Form.Control,{className:\"me-auto\",value:todo.date,onChange:function onChange(e){return setTodo(_objectSpread(_objectSpread({},todo),{},{date:e.target.value}));},type:\"date\"}),/*#__PURE__*/_jsxs(Button,{variant:\"primary w-2\",className:\"todo-btn\",type:\"submit\",children:[currentTodoDataUpdateId?'Update':'Add',\" Todo\"]})]})})})});};export default TodoForm;","map":{"version":3,"sources":["D:/mernStack/TodoList/server/client/src/components/todos/TodoForm.jsx"],"names":["React","useState","useEffect","Stack","Form","Button","useDispatch","useSelector","todoDataUpdateId","createTodo","updateTodo","TodoForm","dispatch","list_id","title","date","status","todo","setTodo","currentUpdateTodoId","state","TodoUpdateId","currentTodoDataUpdateId","TodoDataUpdateId","todoDataUpdate","todos","find","_id","handleSubmit","e","preventDefault","clear","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Stack from 'react-bootstrap/Stack'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { todoDataUpdateId, createTodo, updateTodo } from '../../store/actions/TodoActions';\r\n\r\nconst TodoForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [todo, setTodo] = useState({\r\n        list_id: null,\r\n        title: '',\r\n        date: '',\r\n        status:false\r\n    });\r\n\r\n    const currentUpdateTodoId = useSelector((state) => state.TodoUpdateId);\r\n\r\n    //update data of todos    \r\n    const currentTodoDataUpdateId = useSelector((state) => state.TodoDataUpdateId);\r\n    const todoDataUpdate = useSelector((state) => currentTodoDataUpdateId!==null ? state.todos.find((todo) => todo._id === currentTodoDataUpdateId) : null);\r\n    \r\n    //set local todo update data \r\n    useEffect(() => {\r\n        if(todoDataUpdate) setTodo(todoDataUpdate);\r\n    }, [todoDataUpdate]);\r\n\r\n    useEffect(() => {\r\n        setTodo({...todo, list_id: currentUpdateTodoId});\r\n    }, [currentUpdateTodoId])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(todo.title && todo.date){\r\n            if(currentTodoDataUpdateId!==null){\r\n                dispatch(updateTodo(currentTodoDataUpdateId, todo));\r\n            }else{\r\n                dispatch(createTodo(todo));\r\n            }\r\n            clear();\r\n        }\r\n    }\r\n    \r\n    const clear = () => {\r\n        dispatch(todoDataUpdateId(null));\r\n        setTodo({\r\n            list_id: null,\r\n            title: '',\r\n            date: '',\r\n            status:false\r\n        });\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"ms-4\">\r\n                {currentUpdateTodoId &&\r\n                <Form method=\"post\" onSubmit={handleSubmit}>\r\n                    <Stack direction=\"horizontal\" gap={3}>\r\n                        <Form.Control className=\"me-auto\" value={todo.title} onChange={ (e) => setTodo({...todo, title: e.target.value})} placeholder=\"Enter Title\" />\r\n                        {!currentTodoDataUpdateId && <Form.Control className=\"me-auto\" value={todo.date} onChange={ (e) => setTodo({...todo, date: e.target.value})} type=\"date\" /> }\r\n                        <Button variant=\"primary w-2\" className=\"todo-btn\" type=\"submit\">{currentTodoDataUpdateId ? 'Update' : 'Add' } Todo</Button>\r\n                    </Stack>\r\n                </Form>\r\n                }\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n"]},"metadata":{},"sourceType":"module"}