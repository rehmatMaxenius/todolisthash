{"ast":null,"code":"import _objectSpread from\"D:/mernStack/TodoList/server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/mernStack/TodoList/server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Stack from'react-bootstrap/Stack';import{useDispatch,useSelector}from'react-redux';import{Form,Button}from'react-bootstrap';import{updateListId,createList,updateList}from'../../store/actions/ListActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TodoListForm=function TodoListForm(){var dispatch=useDispatch();var _useState=useState({name:'',todos:[]}),_useState2=_slicedToArray(_useState,2),list=_useState2[0],setList=_useState2[1];var currentUpdateListId=useSelector(function(state){return state.listUpdateId;});var updateListData=useSelector(function(state){return currentUpdateListId!==null?state.lists.find(function(list){return list._id===currentUpdateListId;}):null;});//set local state list \nuseEffect(function(){if(updateListData)setList(updateListData);},[updateListData]);var handleSubmit=function handleSubmit(e){e.preventDefault();if(list.name){if(currentUpdateListId!==null){dispatch(updateList(currentUpdateListId,list));}else{dispatch(createList(list));}clear();}};var clear=function clear(){dispatch(updateListId(null));setList({name:'',todos:[]});};return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(Form,{method:\"post\",onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(Stack,{direction:\"horizontal\",gap:3,children:[/*#__PURE__*/_jsx(Form.Control,{className:\"me-auto\",value:list.name,onChange:function onChange(e){return setList(_objectSpread(_objectSpread({},list),{},{name:e.target.value}));},placeholder:\"Enter The Name of List\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",children:currentUpdateListId?'Update':'Add'})]})})});};export default TodoListForm;","map":{"version":3,"sources":["D:/mernStack/TodoList/server/client/src/components/list/TodoListForm.jsx"],"names":["React","useState","useEffect","Stack","useDispatch","useSelector","Form","Button","updateListId","createList","updateList","TodoListForm","dispatch","name","todos","list","setList","currentUpdateListId","state","listUpdateId","updateListData","lists","find","_id","handleSubmit","e","preventDefault","clear","target","value"],"mappings":"mTAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,IAAT,CAAeC,MAAf,KAA6B,iBAA7B,CACA,OAASC,YAAT,CAAuBC,UAAvB,CAAmCC,UAAnC,KAAqD,iCAArD,C,wFAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvB,GAAMC,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CAEA,cAAwBH,QAAQ,CAAC,CAC7BY,IAAI,CAAE,EADuB,CAE7BC,KAAK,CAAE,EAFsB,CAAD,CAAhC,wCAAOC,IAAP,eAAaC,OAAb,eAKA,GAAMC,CAAAA,mBAAmB,CAAGZ,WAAW,CAAC,SAACa,KAAD,QAAWA,CAAAA,KAAK,CAACC,YAAjB,EAAD,CAAvC,CACA,GAAMC,CAAAA,cAAc,CAAGf,WAAW,CAAC,SAACa,KAAD,QAAWD,CAAAA,mBAAmB,GAAG,IAAtB,CAA6BC,KAAK,CAACG,KAAN,CAAYC,IAAZ,CAAiB,SAACP,IAAD,QAAUA,CAAAA,IAAI,CAACQ,GAAL,GAAaN,mBAAvB,EAAjB,CAA7B,CAA4F,IAAvG,EAAD,CAAlC,CAEA;AACAf,SAAS,CAAC,UAAM,CACZ,GAAGkB,cAAH,CAAmBJ,OAAO,CAACI,cAAD,CAAP,CACtB,CAFQ,CAEN,CAACA,cAAD,CAFM,CAAT,CAIA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CACxBA,CAAC,CAACC,cAAF,GACA,GAAGX,IAAI,CAACF,IAAR,CAAa,CACT,GAAGI,mBAAmB,GAAG,IAAzB,CAA8B,CAC1BL,QAAQ,CAACF,UAAU,CAACO,mBAAD,CAAsBF,IAAtB,CAAX,CAAR,CACH,CAFD,IAEK,CACDH,QAAQ,CAACH,UAAU,CAACM,IAAD,CAAX,CAAR,CACH,CACDY,KAAK,GACR,CACJ,CAVD,CAYA,GAAMA,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAChBf,QAAQ,CAACJ,YAAY,CAAC,IAAD,CAAb,CAAR,CACAQ,OAAO,CAAC,CACJH,IAAI,CAAE,EADF,CAEJC,KAAK,CAAE,EAFH,CAAD,CAAP,CAIH,CAND,CAQA,mBACI,KAAC,KAAD,CAAO,QAAP,wBACI,KAAC,IAAD,EAAM,MAAM,CAAC,MAAb,CAAoB,QAAQ,CAAEU,YAA9B,uBACI,MAAC,KAAD,EAAO,SAAS,CAAC,YAAjB,CAA8B,GAAG,CAAE,CAAnC,wBACI,KAAC,IAAD,CAAM,OAAN,EAAc,SAAS,CAAC,SAAxB,CAAkC,KAAK,CAAET,IAAI,CAACF,IAA9C,CAAoD,QAAQ,CAAE,kBAACY,CAAD,QAAOT,CAAAA,OAAO,gCAAKD,IAAL,MAAWF,IAAI,CAAEY,CAAC,CAACG,MAAF,CAASC,KAA1B,GAAd,EAA9D,CAA+G,WAAW,CAAC,wBAA3H,EADJ,cAEI,KAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,IAAI,CAAC,QAA/B,UAA0CZ,mBAAmB,CAAG,QAAH,CAAc,KAA3E,EAFJ,GADJ,EADJ,EADJ,CAUH,CA9CD,CAgDA,cAAeN,CAAAA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Stack from 'react-bootstrap/Stack'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { updateListId, createList, updateList } from '../../store/actions/ListActions';\r\n\r\nconst TodoListForm = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [list, setList] = useState({\r\n        name: '',\r\n        todos: [],\r\n    });\r\n\r\n    const currentUpdateListId = useSelector((state) => state.listUpdateId);\r\n    const updateListData = useSelector((state) => currentUpdateListId!==null ? state.lists.find((list) => list._id === currentUpdateListId) : null);\r\n\r\n    //set local state list \r\n    useEffect(() => {\r\n        if(updateListData) setList(updateListData);\r\n    }, [updateListData]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(list.name){\r\n            if(currentUpdateListId!==null){\r\n                dispatch(updateList(currentUpdateListId, list));\r\n            }else{\r\n                dispatch(createList(list));\r\n            }\r\n            clear();\r\n        }\r\n    }\r\n    \r\n    const clear = () => {\r\n        dispatch(updateListId(null));\r\n        setList({\r\n            name: '',\r\n            todos: [],\r\n        });\r\n    }\r\n        \r\n    return (\r\n        <React.Fragment>\r\n            <Form method=\"post\" onSubmit={handleSubmit}>\r\n                <Stack direction=\"horizontal\" gap={3}>\r\n                    <Form.Control className=\"me-auto\" value={list.name} onChange={(e) => setList({...list, name: e.target.value})} placeholder=\"Enter The Name of List\" />\r\n                    <Button variant=\"primary\" type=\"submit\">{ currentUpdateListId ? 'Update' : 'Add' }</Button>\r\n                </Stack>\r\n            </Form>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TodoListForm\r\n"]},"metadata":{},"sourceType":"module"}