{"ast":null,"code":"import { GET_LIST, CREATE_LIST, UPDATE_LIST, DELETE_LIST } from '../constants/ListTypes';\nconst initialState = {\n  lists: undefined\n};\nexport default ((lists = initialState, action) => {\n  switch (action.type) {\n    case GET_LIST:\n      console.log(action.payload);\n      return { ...lists,\n        lists: action.payload\n      };\n\n    case CREATE_LIST:\n      return [...lists, action.payload];\n\n    case UPDATE_LIST:\n      return lists.map(list => list._id == action.payload._id ? action.payload : list);\n\n    case DELETE_LIST:\n      return lists.filter(list => list._id !== action.payload);\n\n    default:\n      return lists;\n  }\n});","map":{"version":3,"sources":["D:/mernStack/TodoList/client/src/store/reducers/ListReducer.js"],"names":["GET_LIST","CREATE_LIST","UPDATE_LIST","DELETE_LIST","initialState","lists","undefined","action","type","console","log","payload","map","list","_id","filter"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,EAA6CC,WAA7C,QAAgE,wBAAhE;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAEC;AADU,CAArB;AAIA,gBAAe,CAACD,KAAK,GAAGD,YAAT,EAAuBG,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,QAAL;AACIS,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AACJ,aAAO,EACC,GAAGN,KADJ;AAECA,QAAAA,KAAK,EAAEE,MAAM,CAACI;AAFf,OAAP;;AAIA,SAAKV,WAAL;AACI,aAAO,CAAC,GAAGI,KAAJ,EAAWE,MAAM,CAACI,OAAlB,CAAP;;AACJ,SAAKT,WAAL;AACI,aAAOG,KAAK,CAACO,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACC,GAAL,IAAYP,MAAM,CAACI,OAAP,CAAeG,GAA3B,GAAiCP,MAAM,CAACI,OAAxC,GAAkDE,IAAtE,CAAP;;AACJ,SAAKV,WAAL;AACI,aAAOE,KAAK,CAACU,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACI,OAA3C,CAAP;;AACJ;AACI,aAAON,KAAP;AAdR;AAgBH,CAjBD","sourcesContent":["import { GET_LIST, CREATE_LIST, UPDATE_LIST, DELETE_LIST } from '../constants/ListTypes';\r\n\r\nconst initialState = {\r\n    lists: undefined\r\n}\r\n\r\nexport default (lists = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_LIST:\r\n            console.log(action.payload);\r\n        return {\r\n                ...lists,\r\n                lists: action.payload\r\n            };\r\n        case CREATE_LIST:\r\n            return [...lists, action.payload];\r\n        case UPDATE_LIST:\r\n            return lists.map((list) => list._id == action.payload._id ? action.payload : list);\r\n        case DELETE_LIST:\r\n            return lists.filter((list) => list._id !== action.payload);\r\n        default:\r\n            return lists;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}