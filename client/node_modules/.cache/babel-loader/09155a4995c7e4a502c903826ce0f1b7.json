{"ast":null,"code":"var _jsxFileName = \"D:\\\\mernStack\\\\TodoList\\\\client\\\\src\\\\components\\\\todos\\\\TodoForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Stack from 'react-bootstrap/Stack';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { todoDataUpdateId, updateTodoId, createTodo, updateTodo } from '../../store/actions/TodoActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoForm = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [todo, setTodo] = useState({\n    list_id: null,\n    title: '',\n    date: '',\n    status: false\n  });\n  const currentUpdateTodoId = useSelector(state => state.TodoUpdateId); //update data of todos    \n\n  const currentTodoDataUpdateId = useSelector(state => state.TodoDataUpdateId);\n  const todoDataUpdate = useSelector(state => currentTodoDataUpdateId !== null ? state.todos.find(todo => todo._id == currentTodoDataUpdateId) : null); //set local todo update data \n\n  useEffect(() => {\n    if (todoDataUpdate) setTodo(todoDataUpdate);\n  }, [todoDataUpdate]);\n  useEffect(() => {\n    setTodo({ ...todo,\n      list_id: currentUpdateTodoId\n    });\n  }, [currentUpdateTodoId]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(createTodo(todo));\n  };\n\n  const clear = () => {\n    dispatch(updateListId(null));\n    setList({\n      name: '',\n      todos: []\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ms-4\",\n      children: currentUpdateTodoId && /*#__PURE__*/_jsxDEV(Form, {\n        method: \"post\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"horizontal\",\n          gap: 3,\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"me-auto\",\n            value: todo.title,\n            onChange: e => setTodo({ ...todo,\n              title: e.target.value\n            }),\n            placeholder: \"Enter Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), !currentTodoDataUpdateId && /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"me-auto\",\n            value: todo.date,\n            onChange: e => setTodo({ ...todo,\n              date: e.target.value\n            }),\n            type: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 54\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary w-2\",\n            className: \"todo-btn\",\n            type: \"submit\",\n            children: [currentTodoDataUpdateId ? 'Update' : 'Add', \" Todo\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoForm, \"YCW8HhL4gToZzT4ABDVhPVStAh4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["D:/mernStack/TodoList/client/src/components/todos/TodoForm.jsx"],"names":["React","useState","useEffect","Stack","Form","Button","useDispatch","useSelector","todoDataUpdateId","updateTodoId","createTodo","updateTodo","TodoForm","dispatch","todo","setTodo","list_id","title","date","status","currentUpdateTodoId","state","TodoUpdateId","currentTodoDataUpdateId","TodoDataUpdateId","todoDataUpdate","todos","find","_id","handleSubmit","e","preventDefault","clear","updateListId","setList","name","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Stack from 'react-bootstrap/Stack'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { todoDataUpdateId, updateTodoId, createTodo, updateTodo } from '../../store/actions/TodoActions';\r\n\r\nconst TodoForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [todo, setTodo] = useState({\r\n        list_id: null,\r\n        title: '',\r\n        date: '',\r\n        status:false\r\n    });\r\n\r\n    const currentUpdateTodoId = useSelector((state) => state.TodoUpdateId);\r\n\r\n    //update data of todos    \r\n    const currentTodoDataUpdateId = useSelector((state) => state.TodoDataUpdateId);\r\n    const todoDataUpdate = useSelector((state) => currentTodoDataUpdateId!==null ? state.todos.find((todo) => todo._id == currentTodoDataUpdateId) : null);\r\n    \r\n    //set local todo update data \r\n    useEffect(() => {\r\n        if(todoDataUpdate) setTodo(todoDataUpdate);\r\n    }, [todoDataUpdate]);\r\n\r\n    useEffect(() => {\r\n        setTodo({...todo, list_id: currentUpdateTodoId});\r\n    }, [currentUpdateTodoId])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(createTodo(todo))   \r\n    }\r\n    \r\n    const clear = () => {\r\n        dispatch(updateListId(null));\r\n        setList({\r\n            name: '',\r\n            todos: [],\r\n        });\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"ms-4\">\r\n                {currentUpdateTodoId &&\r\n                <Form method=\"post\" onSubmit={handleSubmit}>\r\n                    <Stack direction=\"horizontal\" gap={3}>\r\n                        <Form.Control className=\"me-auto\" value={todo.title} onChange={ (e) => setTodo({...todo, title: e.target.value})} placeholder=\"Enter Title\" />\r\n                        {!currentTodoDataUpdateId && <Form.Control className=\"me-auto\" value={todo.date} onChange={ (e) => setTodo({...todo, date: e.target.value})} type=\"date\" /> }\r\n                        <Button variant=\"primary w-2\" className=\"todo-btn\" type=\"submit\">{currentTodoDataUpdateId ? 'Update' : 'Add' } Todo</Button>\r\n                    </Stack>\r\n                </Form>\r\n                }\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n"]},"metadata":{},"sourceType":"module"}