{"ast":null,"code":"var _jsxFileName = \"D:\\\\mernStack\\\\TodoList\\\\client\\\\src\\\\components\\\\list\\\\ListTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { deleteList, updateListId } from '../../store/actions/ListActions';\nimport { updateTodoId } from '../../store/actions/TodoActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListTable = () => {\n  _s();\n\n  const [listId, setListId] = useState(null);\n  const dispatch = useDispatch();\n  const lists = useSelector(state => state.lists);\n  const currentUpdateTodoId = useSelector(state => state.updateTodoId); //update list edit id\n\n  useEffect(() => {\n    dispatch(updateListId(listId));\n  }, [listId]);\n\n  const handleabc = id => {\n    dispatch(updateTodoId(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: \"list-table\",\n      striped: true,\n      hover: true,\n      size: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: lists && lists.map(list => /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => handleabc(list._id),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: list.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(FaEdit, {\n              onClick: () => setListId(list._id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(FaTrashAlt, {\n              onClick: () => dispatch(deleteList(list._id))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, list._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListTable, \"bl6gqOKv9cG0+Zkx5gj/ji5wmCk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ListTable;\nexport default ListTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTable\");","map":{"version":3,"sources":["D:/mernStack/TodoList/client/src/components/list/ListTable.jsx"],"names":["React","useEffect","useState","Table","useDispatch","useSelector","FaTrashAlt","FaEdit","deleteList","updateListId","updateTodoId","ListTable","listId","setListId","dispatch","lists","state","currentUpdateTodoId","handleabc","id","map","list","_id","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,iCAAzC;AACA,SAASC,YAAT,QAA6B,iCAA7B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMY,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAMW,KAAK,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB;AACA,QAAME,mBAAmB,GAAGZ,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACN,YAAlB,CAAvC,CALoB,CAQpB;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,QAAQ,CAACL,YAAY,CAACG,MAAD,CAAb,CAAR;AACH,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;;AAIA,QAAMM,SAAS,GAAIC,EAAD,IAAQ;AACtBL,IAAAA,QAAQ,CAACJ,YAAY,CAACS,EAAD,CAAb,CAAR;AACH,GAFD;;AAGA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,OAAO,MAArC;AAAsC,MAAA,KAAK,MAA3C;AAA4C,MAAA,IAAI,EAAC,IAAjD;AAAA,8BACI;AAAA,+BACA;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,kBACCJ,KAAK,IAAIA,KAAK,CAACK,GAAN,CAAWC,IAAD,iBAChB;AAAmB,UAAA,OAAO,EAAE,MAAMH,SAAS,CAACG,IAAI,CAACC,GAAN,CAA3C;AAAA,kCACI;AAAA,sBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,mCAAI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAG,MAAMV,SAAS,CAACQ,IAAI,CAACC,GAAN;AAAjC;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,mCAAI,QAAC,UAAD;AAAY,cAAA,OAAO,EAAE,MAAMR,QAAQ,CAACN,UAAU,CAACa,IAAI,CAACC,GAAN,CAAX;AAAnC;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,WAASD,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA,gBADM;AADV;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAtCD;;GAAMX,S;UAEeP,W,EAEHC,W,EACcA,W;;;KAL1BM,S;AAwCN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { deleteList, updateListId } from '../../store/actions/ListActions';\r\nimport { updateTodoId } from '../../store/actions/TodoActions';\r\n\r\nconst ListTable = () => {\r\n    const [listId, setListId] = useState(null);\r\n    const dispatch = useDispatch();\r\n    \r\n    const lists = useSelector((state) => state.lists);\r\n    const currentUpdateTodoId = useSelector((state) => state.updateTodoId);\r\n\r\n    \r\n    //update list edit id\r\n    useEffect(() => {\r\n        dispatch(updateListId(listId));\r\n    }, [listId]);\r\n\r\n    const handleabc = (id) => {\r\n        dispatch(updateTodoId(id))\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Table className=\"list-table\" striped hover size=\"sm\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Edit</th>\r\n                    <th>Delete</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {lists && lists.map((list) => (\r\n                    <tr key={list._id} onClick={() => handleabc(list._id) }>\r\n                        <td>{list.name}</td>\r\n                        <td><FaEdit onClick={ () => setListId(list._id) } /></td>\r\n                        <td><FaTrashAlt onClick={() => dispatch(deleteList(list._id)) }/></td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </Table>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ListTable\r\n"]},"metadata":{},"sourceType":"module"}