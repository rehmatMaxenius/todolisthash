{"ast":null,"code":"var _jsxFileName = \"D:\\\\mernStack\\\\TodoList\\\\client\\\\src\\\\components\\\\todos\\\\TodoTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { FaCheck } from \"react-icons/fa\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTodo } from '../../store/actions/TodoActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoTable = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const dispatch = useDispatch();\n  const currentUpdateTodoId = useSelector(state => state.TodoUpdateId);\n  const myTodos = useSelector(state => state);\n  const filterTodos = useSelector(state => currentUpdateTodoId !== null ? state.todos.find(todo => todo.list_id == currentUpdateTodoId) : null);\n  useEffect(() => {\n    console.log(currentUpdateTodoId);\n\n    if (currentUpdateTodoId) {\n      // setTodos(myTodos);\n      console.log(myTodos);\n      dispatch(getTodo(currentUpdateTodoId));\n    }\n  }, [dispatch, currentUpdateTodoId]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: currentUpdateTodoId && /*#__PURE__*/_jsxDEV(Table, {\n      className: \"list-table mx-4\",\n      striped: true,\n      hover: true,\n      size: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoTable, \"dm+Z43CeM5PBM0KacoYFU68hdSI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = TodoTable;\nexport default TodoTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoTable\");","map":{"version":3,"sources":["D:/mernStack/TodoList/client/src/components/todos/TodoTable.jsx"],"names":["React","useEffect","useState","Table","FaCheck","FaTimes","FaTrashAlt","FaEdit","useDispatch","useSelector","getTodo","TodoTable","todos","setTodos","dispatch","currentUpdateTodoId","state","TodoUpdateId","myTodos","filterTodos","find","todo","list_id","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,iCAAxB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMY,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAMO,mBAAmB,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAAvC;AACA,QAAMC,OAAO,GAAGT,WAAW,CAAEO,KAAD,IAAWA,KAAZ,CAA3B;AACA,QAAMG,WAAW,GAAGV,WAAW,CAAEO,KAAD,IAAWD,mBAAmB,KAAG,IAAtB,GAA6BC,KAAK,CAACJ,KAAN,CAAYQ,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,OAAL,IAAgBP,mBAA3C,CAA7B,GAA+F,IAA3G,CAA/B;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,OAAO,CAACC,GAAR,CAAYT,mBAAZ;;AACA,QAAGA,mBAAH,EAAwB;AACpB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACAJ,MAAAA,QAAQ,CAACJ,OAAO,CAACK,mBAAD,CAAR,CAAR;AACH;AACJ,GAPQ,EAON,CAACD,QAAD,EAAWC,mBAAX,CAPM,CAAT;AAQA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,cACKA,mBAAmB,iBACpB,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAmC,MAAA,OAAO,MAA1C;AAA2C,MAAA,KAAK,MAAhD;AAAiD,MAAA,IAAI,EAAC,IAAtD;AAAA,8BACI;AAAA,+BACA;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CApCD;;GAAMJ,S;UAEeH,W,EAEWC,W,EACZA,W,EACIA,W;;;KANlBE,S;AAsCN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport { FaCheck } from \"react-icons/fa\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getTodo } from '../../store/actions/TodoActions';\r\n\r\nconst TodoTable = () => {\r\n    const [todos, setTodos] = useState([])\r\n    const dispatch = useDispatch();\r\n    \r\n    const currentUpdateTodoId = useSelector((state) => state.TodoUpdateId);\r\n    const myTodos = useSelector((state) => state);\r\n    const filterTodos = useSelector((state) => currentUpdateTodoId!==null ? state.todos.find((todo) => todo.list_id == currentUpdateTodoId) : null);\r\n\r\n    useEffect(() => {\r\n        console.log(currentUpdateTodoId);\r\n        if(currentUpdateTodoId) {\r\n            // setTodos(myTodos);\r\n            console.log(myTodos);\r\n            dispatch(getTodo(currentUpdateTodoId));\r\n        }\r\n    }, [dispatch, currentUpdateTodoId])\r\n    return (\r\n        <React.Fragment>\r\n            {currentUpdateTodoId &&\r\n            <Table className=\"list-table mx-4\" striped hover size=\"sm\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Status</th>\r\n                    <th>Title</th>\r\n                    <th>Date</th>\r\n                    <th>Edit</th>\r\n                    <th>Delete</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                \r\n                </tbody>\r\n            </Table>            \r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TodoTable\r\n"]},"metadata":{},"sourceType":"module"}