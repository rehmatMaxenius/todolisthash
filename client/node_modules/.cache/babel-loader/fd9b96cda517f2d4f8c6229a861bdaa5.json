{"ast":null,"code":"var _jsxFileName = \"D:\\\\mernStack\\\\TodoList\\\\client\\\\src\\\\components\\\\list\\\\TodoListForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Stack from 'react-bootstrap/Stack';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\nimport { getList, updateListId, createList, updateList } from '../../store/actions/ListActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoListForm = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [list, setList] = useState({\n    name: '',\n    todos: []\n  });\n  const currentUpdateListId = useSelector(state => state.listUpdateId);\n  const updateListData = useSelector(state => currentUpdateListId !== null ? state.lists.lists.find(list => list._id == currentUpdateListId) : null); //set local state list \n\n  useEffect(() => {\n    if (updateListData) setList(updateListData); // dispatch(getList())\n  }, [updateListData]); //getting lists\n  // useEffect(() => {\n  //     dispatch(getList())\n  // }, [dispatch])\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (list.name) {\n      if (currentUpdateListId !== null) {\n        dispatch(updateList(currentUpdateListId, list));\n      } else {\n        dispatch(createList(list));\n      }\n\n      clear();\n    }\n  };\n\n  const clear = () => {\n    dispatch(updateListId(null));\n    setList({\n      name: '',\n      todos: []\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      method: \"post\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"horizontal\",\n        gap: 3,\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"me-auto\",\n          value: list.name,\n          onChange: e => setList({ ...list,\n            name: e.target.value\n          }),\n          placeholder: \"Enter The Name of List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: currentUpdateListId ? 'Update' : 'Add'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoListForm, \"T/d/0wbsxfY3GKzSs3SZVFc/TMc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = TodoListForm;\nexport default TodoListForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListForm\");","map":{"version":3,"sources":["D:/mernStack/TodoList/client/src/components/list/TodoListForm.jsx"],"names":["React","useState","useEffect","Stack","useDispatch","useSelector","Form","Button","getList","updateListId","createList","updateList","TodoListForm","dispatch","list","setList","name","todos","currentUpdateListId","state","listUpdateId","updateListData","lists","find","_id","handleSubmit","e","preventDefault","clear","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Stack from 'react-bootstrap/Stack'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { getList, updateListId, createList, updateList } from '../../store/actions/ListActions';\r\n\r\nconst TodoListForm = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [list, setList] = useState({\r\n        name: '',\r\n        todos: [],\r\n    });\r\n\r\n    const currentUpdateListId = useSelector((state) => state.listUpdateId);\r\n    const updateListData = useSelector((state) => currentUpdateListId!==null ? state.lists.lists.find((list) => list._id == currentUpdateListId) : null);\r\n\r\n    //set local state list \r\n    useEffect(() => {\r\n        if(updateListData) setList(updateListData);\r\n        // dispatch(getList())\r\n    }, [updateListData]);\r\n\r\n    //getting lists\r\n    // useEffect(() => {\r\n    //     dispatch(getList())\r\n    // }, [dispatch])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(list.name){\r\n            if(currentUpdateListId!==null){\r\n                dispatch(updateList(currentUpdateListId, list));\r\n            }else{\r\n                dispatch(createList(list));\r\n            }\r\n            clear();\r\n        }\r\n    }\r\n    \r\n    const clear = () => {\r\n        dispatch(updateListId(null));\r\n        setList({\r\n            name: '',\r\n            todos: [],\r\n        });\r\n    }\r\n        \r\n    return (\r\n        <React.Fragment>\r\n            <Form method=\"post\" onSubmit={handleSubmit}>\r\n                <Stack direction=\"horizontal\" gap={3}>\r\n                    <Form.Control className=\"me-auto\" value={list.name} onChange={(e) => setList({...list, name: e.target.value})} placeholder=\"Enter The Name of List\" />\r\n                    <Button variant=\"primary\" type=\"submit\">{ currentUpdateListId ? 'Update' : 'Add' }</Button>\r\n                </Stack>\r\n            </Form>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TodoListForm\r\n"]},"metadata":{},"sourceType":"module"}