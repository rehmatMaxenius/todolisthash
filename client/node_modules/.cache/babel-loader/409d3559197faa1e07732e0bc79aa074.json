{"ast":null,"code":"import { GET_LIST, CREATE_LIST, UPDATE_LIST, DELETE_LIST } from '../constants/ListTypes';\nconst initialState = {\n  lists: undefined\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_LIST:\n      return action.payload;\n\n    case CREATE_LIST:\n      return [{ ...state,\n        list: action.payload\n      }];\n\n    case UPDATE_LIST:\n      return state.lists.map(list => list._id == action.payload._id ? action.payload : list);\n\n    case DELETE_LIST:\n      return state.lists.filter(list => list._id !== action.payload);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["D:/mernStack/TodoList/client/src/store/reducers/ListReducer.js"],"names":["GET_LIST","CREATE_LIST","UPDATE_LIST","DELETE_LIST","initialState","lists","undefined","state","action","type","payload","list","map","_id","filter"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,EAA6CC,WAA7C,QAAgE,wBAAhE;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAEC;AADU,CAArB;AAIA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,QAAL;AACI,aAAOQ,MAAM,CAACE,OAAd;;AACJ,SAAKT,WAAL;AACI,aAAO,CAAC,EAAC,GAAGM,KAAJ;AAAWI,QAAAA,IAAI,EAACH,MAAM,CAACE;AAAvB,OAAD,CAAP;;AACJ,SAAKR,WAAL;AACI,aAAOK,KAAK,CAACF,KAAN,CAAYO,GAAZ,CAAiBD,IAAD,IAAUA,IAAI,CAACE,GAAL,IAAYL,MAAM,CAACE,OAAP,CAAeG,GAA3B,GAAiCL,MAAM,CAACE,OAAxC,GAAkDC,IAA5E,CAAP;;AACJ,SAAKR,WAAL;AACI,aAAOI,KAAK,CAACF,KAAN,CAAYS,MAAZ,CAAoBH,IAAD,IAAUA,IAAI,CAACE,GAAL,KAAaL,MAAM,CAACE,OAAjD,CAAP;;AACJ;AACI,aAAOH,KAAP;AAVR;AAYH,CAbD","sourcesContent":["import { GET_LIST, CREATE_LIST, UPDATE_LIST, DELETE_LIST } from '../constants/ListTypes';\r\n\r\nconst initialState = {\r\n    lists: undefined\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_LIST:\r\n            return action.payload;\r\n        case CREATE_LIST:\r\n            return [{...state, list:action.payload}];\r\n        case UPDATE_LIST:\r\n            return state.lists.map((list) => list._id == action.payload._id ? action.payload : list);\r\n        case DELETE_LIST:\r\n            return state.lists.filter((list) => list._id !== action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}