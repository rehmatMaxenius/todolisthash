{"ast":null,"code":"var _jsxFileName = \"D:\\\\mernStack\\\\TodoList\\\\client\\\\src\\\\components\\\\todos\\\\TodoTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { FaCheck } from \"react-icons/fa\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTodo } from '../../store/actions/TodoActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoTable = props => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const dispatch = useDispatch();\n  const currentUpdateTodoId = useSelector(state => state.TodoUpdateId);\n  const myTodos = useSelector(state => state.todos);\n  useEffect(() => {\n    console.log(currentUpdateTodoId);\n\n    if (currentUpdateTodoId) {\n      dispatch(getTodo(currentUpdateTodoId));\n      setTodos(myTodos);\n    }\n  }, [dispatch, currentUpdateTodoId]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: currentUpdateTodoId && /*#__PURE__*/_jsxDEV(Table, {\n      className: \"list-table mx-4\",\n      striped: true,\n      hover: true,\n      size: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: props.todos && props.todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Mark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Otto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(FaTrashAlt, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)]\n        }, todo._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoTable, \"bRJmHsudNiuCvhTIaNoLYqWC/mU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = TodoTable;\nexport default TodoTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoTable\");","map":{"version":3,"sources":["D:/mernStack/TodoList/client/src/components/todos/TodoTable.jsx"],"names":["React","useEffect","useState","Table","FaCheck","FaTimes","FaTrashAlt","FaEdit","useDispatch","useSelector","getTodo","TodoTable","props","todos","setTodos","dispatch","currentUpdateTodoId","state","TodoUpdateId","myTodos","console","log","map","todo","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,iCAAxB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMa,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAMQ,mBAAmB,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAAvC;AACA,QAAMC,OAAO,GAAGV,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACJ,KAAlB,CAA3B;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,OAAO,CAACC,GAAR,CAAYL,mBAAZ;;AACA,QAAGA,mBAAH,EAAwB;AACpBD,MAAAA,QAAQ,CAACL,OAAO,CAACM,mBAAD,CAAR,CAAR;AACAF,MAAAA,QAAQ,CAACK,OAAD,CAAR;AACH;AACJ,GANQ,EAMN,CAACJ,QAAD,EAAWC,mBAAX,CANM,CAAT;AAOA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,cACKA,mBAAmB,iBACpB,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAmC,MAAA,OAAO,MAA1C;AAA2C,MAAA,KAAK,MAAhD;AAAiD,MAAA,IAAI,EAAC,IAAtD;AAAA,8BACI;AAAA,+BACA;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAA,kBAECJ,KAAK,CAACC,KAAN,IAAeD,KAAK,CAACC,KAAN,CAAYS,GAAZ,CAAiBC,IAAD,iBAC5B;AAAA,kCACA;AAAA,mCAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,eAIA;AAAA,mCAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAJA,eAKA;AAAA,mCAAI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBALA;AAAA,WAASA,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA,gBADY;AAFhB;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CA3CD;;GAAMb,S;UAEeH,W,EAEWC,W,EACZA,W;;;KALdE,S;AA6CN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport { FaCheck } from \"react-icons/fa\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getTodo } from '../../store/actions/TodoActions';\r\n\r\nconst TodoTable = (props) => {\r\n    const [todos, setTodos] = useState([])\r\n    const dispatch = useDispatch();\r\n    \r\n    const currentUpdateTodoId = useSelector((state) => state.TodoUpdateId);\r\n    const myTodos = useSelector((state) => state.todos);\r\n\r\n    useEffect(() => {\r\n        console.log(currentUpdateTodoId);\r\n        if(currentUpdateTodoId) {\r\n            dispatch(getTodo(currentUpdateTodoId));\r\n            setTodos(myTodos);\r\n        }\r\n    }, [dispatch, currentUpdateTodoId])\r\n    return (\r\n        <React.Fragment>\r\n            {currentUpdateTodoId &&\r\n            <Table className=\"list-table mx-4\" striped hover size=\"sm\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Status</th>\r\n                    <th>Title</th>\r\n                    <th>Date</th>\r\n                    <th>Edit</th>\r\n                    <th>Delete</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                \r\n                {props.todos && props.todos.map((todo) => (\r\n                    <tr key={todo._id}>\r\n                    <td><FaCheck /></td>\r\n                    <td>Mark</td>\r\n                    <td>Otto</td>\r\n                    <td><FaEdit /></td>\r\n                    <td><FaTrashAlt /></td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </Table>            \r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TodoTable\r\n"]},"metadata":{},"sourceType":"module"}