{"ast":null,"code":"var _jsxFileName = \"D:\\\\mernStack\\\\TodoList\\\\client\\\\src\\\\components\\\\list\\\\ListTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { deleteList, getList, updateListId } from '../../store/actions/ListActions';\nimport { DELETE_LIST } from '../../store/constants/ListTypes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListTable = () => {\n  _s();\n\n  const [updateListId, setUpdateListId] = useState(null);\n  const lists = useSelector(state => state.lists);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    return dispatch(getList());\n  }, []); //update list edit id\n\n  useEffect(() => {\n    dispatch(updateEditId(editId));\n  }, [editId]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: !!lists.lists && /*#__PURE__*/_jsxDEV(Table, {\n      className: \"list-table\",\n      striped: true,\n      hover: true,\n      size: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: lists.lists.map(list => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: list.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(FaEdit, {\n              onClick: () => dispatch(updateListId(list._id))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(FaTrashAlt, {\n              onClick: () => dispatch({\n                type: DELETE_LIST,\n                payload: list._id\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, list._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListTable, \"TLXEnSHbrQLC71v6xyqo/2sm5qQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ListTable;\nexport default ListTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTable\");","map":{"version":3,"sources":["D:/mernStack/TodoList/client/src/components/list/ListTable.jsx"],"names":["React","useEffect","useState","Table","useDispatch","useSelector","FaTrashAlt","FaEdit","deleteList","getList","updateListId","DELETE_LIST","ListTable","setUpdateListId","lists","state","dispatch","updateEditId","editId","map","list","name","_id","type","payload"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,YAA9B,QAAkD,iCAAlD;AACA,SAASC,WAAT,QAA4B,iCAA5B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACF,YAAD,EAAeG,eAAf,IAAkCX,QAAQ,CAAC,IAAD,CAAhD;AAEA,QAAMY,KAAK,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB;AACA,QAAME,QAAQ,GAAGZ,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,WAAOe,QAAQ,CAACP,OAAO,EAAR,CAAf;AACH,GAFQ,EAEN,EAFM,CAAT,CANoB,CAUpB;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,QAAQ,CAACC,YAAY,CAACC,MAAD,CAAb,CAAR;AACH,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAGA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,cACK,CAAC,CAACJ,KAAK,CAACA,KAAR,iBACD,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,OAAO,MAArC;AAAsC,MAAA,KAAK,MAA3C;AAA4C,MAAA,IAAI,EAAC,IAAjD;AAAA,8BACI;AAAA,+BACA;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,kBACCA,KAAK,CAACA,KAAN,CAAYK,GAAZ,CAAiBC,IAAD,iBACb;AAAA,kCACI;AAAA,sBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,mCAAI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAG,MAAML,QAAQ,CAACN,YAAY,CAACU,IAAI,CAACE,GAAN,CAAb;AAAhC;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,mCAAI,QAAC,UAAD;AAAY,cAAA,OAAO,EAAE,MAAMN,QAAQ,CAAC;AAAEO,gBAAAA,IAAI,EAAEZ,WAAR;AAAqBa,gBAAAA,OAAO,EAAEJ,IAAI,CAACE;AAAnC,eAAD;AAAnC;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,WAASF,IAAI,CAACE,GAAd;AAAA;AAAA;AAAA;AAAA,gBADH;AADD;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAtCD;;GAAMV,S;UAGYP,W,EACGD,W;;;KAJfQ,S;AAwCN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { deleteList, getList, updateListId } from '../../store/actions/ListActions';\r\nimport { DELETE_LIST } from '../../store/constants/ListTypes';\r\n\r\nconst ListTable = () => {\r\n    const [updateListId, setUpdateListId] = useState(null);\r\n    \r\n    const lists = useSelector((state) => state.lists);\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        return dispatch(getList())\r\n    }, [])\r\n    \r\n    //update list edit id\r\n    useEffect(() => {\r\n        dispatch(updateEditId(editId));\r\n    }, [editId]);\r\n    return (\r\n        <React.Fragment>\r\n            {!!lists.lists &&\r\n            <Table className=\"list-table\" striped hover size=\"sm\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Edit</th>\r\n                    <th>Delete</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {lists.lists.map((list) => (\r\n                    <tr key={list._id}>\r\n                        <td>{list.name}</td>\r\n                        <td><FaEdit onClick={ () => dispatch(updateListId(list._id)) } /></td>\r\n                        <td><FaTrashAlt onClick={() => dispatch({ type: DELETE_LIST, payload: list._id })} /></td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </Table>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ListTable\r\n"]},"metadata":{},"sourceType":"module"}