{"ast":null,"code":"import { GET_TODO, CREATE_TODO, UPDATE_TODO_STATUS, UPDATE_TODO, DELETE_TODO } from '../constants/TodoTypes';\nexport default ((state = [], action) => {\n  switch (action.type) {\n    case GET_TODO:\n      return action.payload;\n\n    case CREATE_TODO:\n      return [...state, action.payload];\n\n    case UPDATE_TODO:\n    case UPDATE_TODO_STATUS:\n      console.log(action.payload._id);\n      return state.map(todo => todo._id == action.payload._id ? action.payload : todo);\n\n    case DELETE_TODO:\n      return state.filter(todo => todo._id !== action.payload);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["D:/mernStack/TodoList/client/src/store/reducers/TodoReducer.js"],"names":["GET_TODO","CREATE_TODO","UPDATE_TODO_STATUS","UPDATE_TODO","DELETE_TODO","state","action","type","payload","console","log","_id","map","todo","filter"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,kBAAhC,EAAoDC,WAApD,EAAiEC,WAAjE,QAAoF,wBAApF;AAEA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,QAAL;AACI,aAAOM,MAAM,CAACE,OAAd;;AACJ,SAAKP,WAAL;AACI,aAAO,CAAC,GAAGI,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACJ,SAAKL,WAAL;AACA,SAAKD,kBAAL;AACIO,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,OAAP,CAAeG,GAA3B;AACA,aAAON,KAAK,CAACO,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACF,GAAL,IAAYL,MAAM,CAACE,OAAP,CAAeG,GAA3B,GAAiCL,MAAM,CAACE,OAAxC,GAAkDK,IAAtE,CAAP;;AACJ,SAAKT,WAAL;AACI,aAAOC,KAAK,CAACS,MAAN,CAAcD,IAAD,IAAUA,IAAI,CAACF,GAAL,KAAaL,MAAM,CAACE,OAA3C,CAAP;;AACJ;AACI,aAAOH,KAAP;AAZR;AAcH,CAfD","sourcesContent":["import { GET_TODO, CREATE_TODO, UPDATE_TODO_STATUS, UPDATE_TODO, DELETE_TODO } from '../constants/TodoTypes';\r\n\r\nexport default (state = [], action) => {\r\n    switch (action.type) {\r\n        case GET_TODO:\r\n            return action.payload;\r\n        case CREATE_TODO:\r\n            return [...state, action.payload];\r\n        case UPDATE_TODO:\r\n        case UPDATE_TODO_STATUS:\r\n            console.log(action.payload._id);\r\n            return state.map((todo) => todo._id == action.payload._id ? action.payload : todo);\r\n        case DELETE_TODO:\r\n            return state.filter((todo) => todo._id !== action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}